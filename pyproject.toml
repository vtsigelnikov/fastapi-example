[tool.poetry]
name = "fastapi-example"
version = "0.1.0"
description = ""
authors = ["Vladislav Tsigelnikov <v.tsigelnikov@redmadrobot.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "0.111.0"
httpx = "0.25"
urllib3 = "2.2.1"
cryptography = "42.0.4"

[tool.poetry.group.dev.dependencies]
ruff = "0.4.0"
mypy = "1.9.0"

[tool.ruff]
# Same as Black.
line-length = 120
indent-width = 4

# Assume Python 3.12
target-version = "py312"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "D",
    "ANN101",
    "ANN102",
    "S101",
    "COM812",
    "ISC001",
    "FBT001",
]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.mypy]
plugins = ["pydantic.mypy"]
exclude = [
    ".venv"
]
strict = true
# Disable untyped import warnings, but follow imports locally and require them (ignore_missing_imports is True)
disable_error_code = [
    "import-untyped",
    "type-abstract"
]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
